import java.io.*;
public class Counter {

	private Hashnode[] list;

	public Counter(){
		this.list =  new Hashnode[25];
	}

	public static void main(String args[]){
		System.out.println("main");

		Counter counter = new Counter();
		try {
			counter.wordCount("TheWizard.txt");
		} catch (IOException e) {
			System.out.println("File not found");
		}
	}
	
	public void wordCount(String input_filename) throws IOException{
		System.out.println("WordCount");
		this.toList(input_filename);
		for(int i = 0; i<list.length; i++){
			System.out.println(list[i].getKey()+ " "+ list[i].getNum());
		}
	}
	
	public void toList(String filename) throws IOException{
		System.out.println("To List");

		BufferedReader reader = new BufferedReader(new FileReader(filename));
		String currentLine = reader.readLine();
		String[] array;

		while(currentLine != null){
			String line = currentLine.toLowerCase();
			array = line.split("\\w");
			for(int i = 0; i<array.length; i++){
				System.out.println(array[i]);
			}
			for(int i = 0; i< array.length; i++){
				this.insert(array[i]);
			}
			currentLine = reader.readLine();
		}
		reader.close();
	}
	
	/*
	 * Inserts a string into array 
	 * @param key: the String to be inserted
	 */
	public void insert(String key){
		System.out.println(key);
		int code = (key.charAt(0))%26 - 'a'%26;
		if(this.findKey(key)){
			list[code] = new Hashnode(key);
		} else {
			Hashnode node = list[code];
			do{
				if(node.getKey()== key){
					node.addNum();
				}
			} while (node.getNext() != null);

		}
	}

	/*
	 * Searches for key in map 
	 * @param String key: represents the key that is being searched
	 * @return true if the key is there. False if it is not
	 */
	public boolean findKey(String key){
		System.out.println("find key");
		int code = key.charAt(0)%26 - 'a'%26;
		Hashnode node = list[code];
		do{
			if(node.getKey() == key){
				return true;
			}
		} while (node.getNext() != null);

		return false;

	}

	
}


